import clr, sys, re
clr.AddReference("Microsoft.Build")
clr.AddReference("Microsoft.Build.Framework")
import Microsoft.Build.Evaluation
import System

def main(project, project2, arguments):
    collection = Microsoft.Build.Evaluation.ProjectCollection();
    collection.DefaultToolsVersion = "4.0"
    project = collection.LoadProject(project);

    default_props = None
    props = None
    for y in project.Xml.Imports:
        if y.Project == '$(VCTargetsPath)\Microsoft.Cpp.default.props':
            default_props = y
        if y.Project == '$(VCTargetsPath)\Microsoft.Cpp.props':
            props = y
    
    condition = ""
    for x in arguments:
        if re.match("--c:(.*)", x):
            match = re.match("--c:(.*)", x);   
            condition = match.groups(1)[0]         
        if re.match("--p:([^=]+)=(.*)", x):
            match = re.match("--p:([^=]+)=(.*)", x);
            propertyGroup = project.Xml.CreatePropertyGroupElement()
            project.Xml.InsertBeforeChild(propertyGroup, props);            
            propertyGroup.Condition = condition
            propertyGroup.Label = "Autogenerated overrides"
            propertyGroup.SetProperty(match.groups(1)[0], match.groups(1)[1])    
    project.Save(project2);

if __name__ == '__main__':
    main(sys.argv[1], sys.argv[2], sys.argv[3:])

